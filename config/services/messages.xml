<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services https://symfony.com/schema/dic/services/services-1.0.xsd">

    <parameters>
        <parameter key="amqp.dsn">%env(resolve:MESSENGER_TRANSPORT_DSN)%</parameter>
    </parameters>
    <services>
        <defaults public="false" />

        <!-- Asynchronous -->
        <service id="messenger.senders_locator" class="Symfony\Component\Messenger\Transport\Sender\SendersLocator">
            <argument type="collection" /> <!-- Per message senders map -->
            <argument /> <!-- senders locator -->
        </service>
        <service id="messenger.middleware.send_message" class="Symfony\Component\Messenger\Middleware\SendMessageMiddleware">
            <tag name="monolog.logger" channel="messenger" />
            <argument type="service" id="messenger.senders_locator" />
            <argument type="service" id="event_dispatcher" on-invalid="null"/>
            <call method="setLogger">
                <argument type="service" id="logger" on-invalid="ignore" />
            </call>
        </service>

        <!-- Message encoding/decoding -->
        <service id="messenger.transport.symfony_serializer" class="Symfony\Component\Messenger\Transport\Serialization\Serializer" />
        <service alias="messenger.transport.symfony_serializer" id="messenger.default_serializer" />
        <service id="messenger.transport.native_php_serializer" class="Symfony\Component\Messenger\Transport\Serialization\PhpSerializer" />

        <!-- Middleware -->
        <service id="messenger.middleware.handle_message" class="Symfony\Component\Messenger\Middleware\HandleMessageMiddleware" abstract="true">
            <tag name="monolog.logger" channel="messenger" />
            <argument /> <!-- Bus handler resolver -->
            <call method="setLogger">
                <argument type="service" id="logger" on-invalid="ignore" />
            </call>
        </service>

        <service id="messenger.middleware.add_bus_name_stamp_middleware" class="Symfony\Component\Messenger\Middleware\AddBusNameStampMiddleware" abstract="true" />

        <service id="messenger.middleware.dispatch_after_current_bus" class="Symfony\Component\Messenger\Middleware\DispatchAfterCurrentBusMiddleware" />

        <service id="messenger.middleware.failed_message_processing_middleware" class="Symfony\Component\Messenger\Middleware\FailedMessageProcessingMiddleware" />


        <!-- Discovery -->
        <service id="messenger.receiver_locator">
            <tag name="container.service_locator" />
            <argument type="collection" />
        </service>

        <!-- transports -->
        <service id="messenger.transport_factory" class="Symfony\Component\Messenger\Transport\TransportFactory">
            <argument type="tagged" tag="messenger.transport_factory" />
        </service>

        <service id="messenger.transport.amqp.factory" class="Symfony\Component\Messenger\Transport\AmqpExt\AmqpTransportFactory">
            <tag name="messenger.transport_factory" />
        </service>

        <service id="messenger.transport.redis.factory" class="Symfony\Component\Messenger\Transport\RedisExt\RedisTransportFactory">
            <tag name="messenger.transport_factory" />
        </service>

        <service id="messenger.transport.sync.factory" class="Symfony\Component\Messenger\Transport\Sync\SyncTransportFactory">
            <tag name="messenger.transport_factory" />
            <argument type="service" id="messenger.routable_message_bus" />
        </service>

        <service id="messenger.transport.in_memory.factory" class="Symfony\Component\Messenger\Transport\InMemoryTransportFactory">
            <tag name="messenger.transport_factory" />
            <tag name="kernel.reset" method="reset" />
        </service>


        <!-- failed handling -->
        <service id="messenger.failure.send_failed_message_to_failure_transport_listener" class="Symfony\Component\Messenger\EventListener\SendFailedMessageToFailureTransportListener">
            <tag name="kernel.event_subscriber" />
            <tag name="monolog.logger" channel="messenger" />
            <argument type="service" id="messenger.routable_message_bus" />
            <argument /> <!-- Failure transport name -->
            <argument type="service" id="logger" on-invalid="ignore" />
        </service>

        <!-- routable message bus -->
        <service id="messenger.routable_message_bus" class="Symfony\Component\Messenger\RoutableMessageBus">
            <argument /> <!-- Message bus locator -->
            <argument type="service" id="messenger.bus.default" />
        </service>
    </services>
</container>
